name: Tests

on:
  push:
    branches:
      - "*"
      - "!skipci*"

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set variable values
        run: ./.github/scripts/build-vars.sh
        env:
          CODE_CLIMATE_ID: ${{ secrets.CODE_CLIMATE_ID }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: set path
        run: |
          echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
      - name: Run unit tests
        run: yarn && yarn coverage
      - name: Publish test coverage to Code Climate
        if: env.CODE_CLIMATE_ID != ''
        # uses: paambaati/codeclimate-action@v2.7.5
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/lcov.info:lcov
      - name: Store unit test results
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_results
          path: ${{github.workspace}}/coverage/lcov.info


  # Notify the integrations channel only when a Snyk auto merge fails unit tests 
  notify_on_unit_test_failure:
    runs-on: ubuntu-latest
    needs: 
      - unit-tests
    #only check branch names that begin with snyk-
    if: startsWith(github.ref, 'refs/heads/snyk-') && failure()
    steps:
      - name: Get Unit Test Run URL
        id: get_unit_test_run_url
        run: |
          echo "Test Run URL: ${{ github.run_url }}"
          echo "test_run_url" >> $GITHUB_OUTPUT
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: ":boom: A Synk auto merge has failed unit tests. See link below."
          SLACK_MESSAGE: "${{ steps.get_unit_test_run_url.outputs.test_run_url }}"
          SLACK_WEBHOOK: ${{ secrets.INTEGRATIONS_SLACK_WEBHOOK }}
